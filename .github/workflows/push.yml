name: CI

on:
  push:
    branches:
      - master
      - development
  pull_request:
    branches:
      - '*'

env:
  CI: true

permissions:
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    environment: development
    container: node:18
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          CI_DIRECTUS_TOKEN: ${{ secrets.CI_DIRECTUS_TOKEN }}

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: production-artifacts
          path: |
            .next/standalone/
            public/
            .next/static/

  build-docker:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref }} != 'master' && ${{ github.ref }} != 'development'
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: production-artifacts

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/webcv:${{ env.BRANCH_NAME }}
  release:
    needs: build-docker
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    if: ${{ github.ref }} == 'master' || ${{ github.ref }} == 'development'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm install -g semantic-release @saithodev/semantic-release-backmerge @semantic-release/github @semantic-release/exec
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: npx semantic-release --debug